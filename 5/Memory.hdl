// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/5/Memory.hdl
/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load=1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid and reads 0. Access to any address
 * in the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the Screen
 * and Keyboard chip specifications given in the lectures and the book.
 */
CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    DMux(
        in=load,
        sel=address[14],
        a=ramLoad,
        b=screenLoad, 
    );

    // less than 100 0000 0000 0000 is ram
    RAM16K(
        in=in,
        address=address[0..13],
        load=ramLoad,
        out=ram,
    );

	// 100 0000 0000 0000 and upwards is the screen memory map
    Screen(
        in=in,
        address=address[0..12],
        load=screenLoad,
        out=screen,
    );
    
    // 110 0000 0000 0000 is the keyboard register
    Keyboard(out=keyboard);

    Mux4Way16(
        sel=address[13..14],// sel is based on last 2 bus pins
        a=ram,              // 00
        b=ram,              // 01
        c=screen,           // 10
        d=keyboard,         // 11
        out=out,
    );
}